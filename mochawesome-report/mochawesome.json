{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2025-08-22T21:52:10.294Z",
    "end": "2025-08-22T21:53:20.192Z",
    "duration": 69898,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "221f2f1f-34e6-4ddf-8a5b-d305da2234a0",
      "title": "",
      "fullFile": "cypress\\e2e\\calculadora.cy.js",
      "file": "cypress\\e2e\\calculadora.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0bd12db0-74fa-46c1-b956-9b451e3b5f63",
          "title": "Teste da Calculadora de Orçamento",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Adicione a renda mensal",
              "fullTitle": "Teste da Calculadora de Orçamento Adicione a renda mensal",
              "timedOut": null,
              "duration": 3082,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "setRenda(5000);\ncy.get('#remainingBalance').should('contain', 'R$ 5000.00');",
              "err": {},
              "uuid": "c9d24c8c-2260-4b19-a69c-d0fd6dad842e",
              "parentUUID": "0bd12db0-74fa-46c1-b956-9b451e3b5f63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adicionar varias despesas",
              "fullTitle": "Teste da Calculadora de Orçamento Adicionar varias despesas",
              "timedOut": null,
              "duration": 21469,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "setRenda(5000);\nconst despesas = [{\n  nome: 'Aluguel',\n  valor: 1500\n}, {\n  nome: 'Supermercado',\n  valor: 800\n}, {\n  nome: 'Gasolina',\n  valor: 400\n}, {\n  nome: 'Internet',\n  valor: 200\n}, {\n  nome: 'Cartão de Crédito',\n  valor: 1000\n}];\ndespesas.forEach(desp => addDespesa(desp.nome, desp.valor));\ncy.get('#remainingBalance').should('contain', 'R$ 1100.00');\ncy.get('#expenseList li').should('have.length', despesas.length);",
              "err": {},
              "uuid": "9bf61327-102e-48c9-a3aa-d51ed4f757c6",
              "parentUUID": "0bd12db0-74fa-46c1-b956-9b451e3b5f63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Editar despesas e excluir a Gasolina",
              "fullTitle": "Teste da Calculadora de Orçamento Editar despesas e excluir a Gasolina",
              "timedOut": null,
              "duration": 23234,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "setRenda(5000);\nconst despesas = [{\n  nome: 'Aluguel',\n  valor: 1500\n}, {\n  nome: 'Supermercado',\n  valor: 800\n}, {\n  nome: 'Gasolina',\n  valor: 400\n}, {\n  nome: 'Internet',\n  valor: 200\n}, {\n  nome: 'Cartão de Crédito',\n  valor: 1000\n}];\ndespesas.forEach(desp => addDespesa(desp.nome, desp.valor));\ncy.window().then(win => {\n  const promptStub = cy.stub(win, 'prompt');\n  promptStub.onCall(0).returns('Feira'); // Nome Supermercado\n  promptStub.onCall(1).returns('800'); // Valor Supermercado\n  promptStub.onCall(2).returns('Gasolina'); // Nome Gasolina\n  promptStub.onCall(3).returns('250'); // Valor Gasolina\n});\ncy.contains('#expenseList li', 'Supermercado').find('.edit').click();\ncy.wait(500);\ncy.get('#expenseList li').should('contain', 'Feira');\ncy.contains('#expenseList li', 'Gasolina').find('.edit').click();\ncy.wait(500);\ncy.contains('#expenseList li', 'Gasolina').should('contain', '250.00');\ncy.contains('#expenseList li', 'Gasolina').find('button').last().click();\ncy.wait(500);\ncy.get('#remainingBalance').should('contain', 'R$ 1500.00');",
              "err": {},
              "uuid": "bb6b582d-6dfc-4590-a63f-a99097b98ebd",
              "parentUUID": "0bd12db0-74fa-46c1-b956-9b451e3b5f63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Excluir todas as despesas restantes",
              "fullTitle": "Teste da Calculadora de Orçamento Excluir todas as despesas restantes",
              "timedOut": null,
              "duration": 18997,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "setRenda(5000);\nconst despesas = [{\n  nome: 'Aluguel',\n  valor: 1500\n}, {\n  nome: 'Feira',\n  valor: 800\n}, {\n  nome: 'Internet',\n  valor: 200\n}, {\n  nome: 'Cartão de Crédito',\n  valor: 1000\n}];\ndespesas.forEach(desp => addDespesa(desp.nome, desp.valor));\ncy.get('#expenseList li').each(() => {\n  cy.get('#expenseList li').first().find('button').last().click();\n  cy.wait(500);\n});\ncy.get('#expenseList li').should('have.length', 0);\ncy.get('#remainingBalance').should('contain', 'R$ 5000.00');",
              "err": {},
              "uuid": "f3698783-2250-4fda-847b-f6d12f19a1ce",
              "parentUUID": "0bd12db0-74fa-46c1-b956-9b451e3b5f63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Manter o saldo total da renda quando não houver despesas",
              "fullTitle": "Teste da Calculadora de Orçamento Manter o saldo total da renda quando não houver despesas",
              "timedOut": null,
              "duration": 2550,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "setRenda(4000);\ncy.get('#expenseList li').should('have.length', 0);\ncy.get('#remainingBalance').should('contain', 'R$ 4000.00');",
              "err": {},
              "uuid": "dc5f0ac3-b222-4602-b219-1e29e57a97ec",
              "parentUUID": "0bd12db0-74fa-46c1-b956-9b451e3b5f63",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c9d24c8c-2260-4b19-a69c-d0fd6dad842e",
            "9bf61327-102e-48c9-a3aa-d51ed4f757c6",
            "bb6b582d-6dfc-4590-a63f-a99097b98ebd",
            "f3698783-2250-4fda-847b-f6d12f19a1ce",
            "dc5f0ac3-b222-4602-b219-1e29e57a97ec"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 69332,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}